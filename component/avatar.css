@import "../settings/document.css";

/**
 * Component: `c-avatar`
 * Description:	User Avatar
 *
 * Modifiers:	  `c-avatar--xs`
 *				  `c-avatar--sm`
 *				  `c-avatar--md`
 *				  `c-avatar--lg`
 *				  `c-avatar--xl`
 *
 * Markup: 
 *   <figure class="c-avatar c-avatar--md">
 *	 	<a href="..." class="c-avatar__link" target="_blank">
 *		 	<img src="..." class="c-avatar__image">
 *	 	</a>
 *   </figure>
 *
 ========================================================================== */

.c-avatar {
	--size: calc(5 * var(--unit));

	--size-xs: 2.4rem;
	--size-sm: 4rem;
	--size-md: 8rem;
	--size-lg: 12.8rem;
	--size-xl: 19.2rem;
}

/* ========================================================================
   Component: `c-avatar`
 ========================================================================== */

.c-avatar {
	display: inline-block;
	border-radius: 50%;
	overflow: hidden;

	width: var(--size);
	height: var(--size);

	font-size: .001px;
	text-align: center;
	vertical-align: middle;

	background-size: cover;
	user-select: none;

	/* reset default styles figure */
	margin: 0;
}

.c-avatar :matches(a, img) {
	display: inline-block;
	width: inherit;
	height: inherit;
}

.c-avatar img {
	object-fit: cover;
}

/* picture on background */
.c-avatar[style*="background"] {
	box-shadow: var(--inset-shadow-2dp);
}


/* State: `:empty`
 ========================================================================== */

.c-avatar:not([style*="background"]):empty,
.c-avatar:not([style*="background"]) .c-avatar__link:empty {
	position: relative;
	background-color: var(--clr-grey-300);
	border: 0.1rem solid var(--clr-grey-400);
	box-sizing: border-box;
}

.c-avatar:not([style*="background"]):empty::before,
.c-avatar:not([style*="background"]):empty::after,
.c-avatar:not([style*="background"]) .c-avatar__link:empty::after,
.c-avatar:not([style*="background"]) .c-avatar__link:empty::before {
	position: absolute;
	top: 50%;
	left: 50%;
	
	display: inline-block;
	height: 40%;
	width: 0.1rem;
	background-color: var(--clr-grey-400);
	
	content: ' ';
}

.c-avatar:not([style*="background"]):empty::before,
.c-avatar:not([style*=background]) .c-avatar__link:empty::before {
	transform: translate(-50%, -50%) rotate(45deg);
}

.c-avatar:not([style*="background"]):empty::after,
.c-avatar:not([style*=background]) .c-avatar__link:empty::after {
	transform: translate(-50%, -50%) rotate(-45deg);
}


/* Modifiers: Sizes
 ========================================================================== */

 .c-avatar--xs {
	--size: var(--size-xs);
}
.c-avatar--sm {
	--size: var(--size-sm);
}
.c-avatar--md {
	--size: var(--size-md);
}
.c-avatar--lg {
	--size: var(--size-lg);
}
.c-avatar--xl {
	--size: var(--size-xl);
}


/* Context: `c-panel`
 ========================================================================== */

.c-panel:not(.s-clean) .c-avatar:not([style*="background"]) {
	box-shadow: none;
}
