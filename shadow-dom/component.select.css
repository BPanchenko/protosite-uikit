@import '../settings/basic.css';
@import '../settings/shadow.css';

@import '../.snippet/icon.css';
@import '../.snippet/field.css';

/**
 * Core Component: Select Field
 * Childnodes:
 *	- Button as the first element of user interaction;
 *	- Status of choice as an element that is a child of the button;
 *	- Picker with selection options.
 *	
 * [ProtoSite](http://protosite.rocks/components/select.html)
 */

/** Settings
=========================================================================== */

:host {
	@extend %field-settings;

	--bkgd-color: var(--clr-white);
	--width: max-content;

	--marker-glyph: '\e18a';
	--option-glyph: '\e153';

	--text-boldness: var(--font-normal);
	--text-font: var(--ui-font);
	--text-interligne: var(--base-interligne);
	--text-size: var(--base-text-size);

	--bottom-space: 0.125--unit;
	--left-space: 0.75--space;
	--right-space: 1--space;
	--top-space: 0.125--unit;

	--marker-color: currentColor;
	--option-bg-color: var(--clr-gray-50);
	--option-end-space: 2--unit;
	--option-start-space: 0.75--unit;
	--picker-space: 0.1875--space;

	#button {
		--icon-code: var(--marker-glyph);
		--icon-color: var(--marker-color);
		--icon-size: var(--text-md);
	}

	#picker {
		--bkgd-color: var(--clr-white);
		--bord-color: var(--clr-gray-100);
		--text-color: var(--clr-foreground);
		--shadow: var(--shadow-4dp);
		--size: 25svmax;
	}

	#status {
		--text-boldness: var(--font-medium);
		&::before {
			--text-boldness: var(--font-normal);
		}
	}
}

/** Initial Styling */

:host {
	--bord-color: transparent;
	--marker-color: var(--clr-gray-400);
	--shadow: var(--shadow-2dp);
}

/** Modifications */

:host(:hover),
:host(:focus),
:host(:state(--expanded)) {
	--marker-color: currentColor;
}

:host(:hover),
:host(:focus) {
	--shadow: var(--shadow-3dp);
}

:host(:state(--expanded)) {
	--marker-glyph: '\e18d';
}

/** Context */

:host-context(.c-panel:not(.s-clean)) {
	--bord-color: var(--clr-gray-400);
	--shadow: none;

	&:host(:focus) {
		--bord-color: var(--clr-gray-100);
	}

	&:host(:state(--expanded)) {
		--shadow: var(--shadow-2dp);
	}
}

/** Rules
=========================================================================== */

:host {
	@extend %field;

	content-visibility: auto;
	display: inline-block;
	position: relative;

	box-sizing: content-box;
	inline-size: var(--width);
	block-size: max-content;
	padding-block: unset;
	padding-inline: 1--picker-space;

	vertical-align: middle;

	background-color: var(--bkgd-color);
	border-color: var(--bord-color);
	border-width: 1--rpx;
	border-style: solid;
	border-radius: var(--radius);
	box-shadow: var(--shadow);
	user-select: none;
}

:host(:focus) {
	outline-color: var(--clr-purple-800);
	outline-width: 1--rpx;
	outline-style: dashed;
	outline-offset: -0.8--picker-space;
}

:host(:state(--disabled)) {
	opacity: 0.5;
	pointer-events: none;
}

:where(#button, #picker, #status, ::slotted([role='option'])) {
	color: var(--text-color);
	font-family: var(--text-font);
	font-size: var(--text-size);
	line-height: var(--text-interligne);
	font-weight: var(--text-boldness);
}

/** Childnode: Button
=========================================================================== */

:host {
	#button {
		@extend %icon;

		anchor-name: --anchor;

		box-sizing: border-box;
		inline-size: 100%;
		block-size: calc(1--height - 2--rpx);
		padding-block: var(--top-space) var(--bottom-space);
		padding-inline-start: calc(var(--left-space) - var(--picker-space));
		padding-inline-end: calc(var(--right-space) - var(--picker-space));

		display: flex;
		align-items: center;
		column-gap: var(--left-space);

		border-radius: inherit;
		cursor: pointer;

		&::after {
			all: unset;
		}

		&::before {
			content: var(--marker-glyph);
			transition: color var(--base-easing) 0.16s;
		}

		&:focus {
			outline: unset;
		}
	}
}

/** Childnode: Picker
=========================================================================== */

:host {
	#picker {
		position: absolute;
		position-anchor: --anchor;
		position-area: inline-start block-end;
		justify-self: end;
		z-index: 2;

		content-visibility: hidden;
		display: none;
		box-sizing: content-box;
		interpolate-size: allow-keywords;
		inline-size: var(--width);
		block-size: max-content;
		padding: 1--picker-space;
		margin-block-start: var(--space-sm);

		background-color: var(--bkgd-color);
		border-radius: 0.5--unit;
		box-shadow: var(--shadow);
		outline-color: var(--bord-color);
		outline-width: 1--rpx;
		outline-style: solid;
		outline-offset: -0.75--picker-space;

		animation-duration: 460ms;
		animation-fill-mode: both;
		animation-name: none;
		animation-timing-function: var(--base-easing);
		transform-origin: top;

		&[role='listbox'] {
			overflow: hidden;

			&::part(container) {
				display: flex;
				gap: 1--rpx;
				transition: opacity var(--base-easing) 240ms;
			}

			&[aria-orientation='horizontal']::part(container) {
				flex-direction: row;
				inline-size: max-content;
				max-inline-size: var(--size);
			}

			&[aria-orientation='vertical']::part(container) {
				flex-direction: column;
				block-size: max-content;
				max-block-size: var(--size);
			}
		}
	}
}

:host(:state(--expanded)) #picker {
	content-visibility: auto;
	display: block;
	animation-name: expand-picker;
}

:host(:state(--expanded):not(:state(--animating))) #picker {
}

:host(:state(--collapsed)) #picker {
	content-visibility: auto;
	animation-duration: 240ms;
	animation-name: collapse-picker;

	&[role='listbox']::part(container) {
		opacity: 0;
	}
}

@keyframes collapse-picker {
	from {
		block-size: max-content;
		display: block;
		opacity: 1;
		transform: translateY(0);
	}

	70% {
		transform: translateY(0);
	}

	85% {
		opacity: 1;
	}

	to {
		block-size: 0;
		display: none;
		opacity: 0;
		transform: translateY(-1--space-xs);
	}
}

@keyframes expand-picker {
	from {
		display: none;
		block-size: 0;
		transform: translateY(-1--space-sm);
	}

	40% {
		transform: translateY(0);
	}

	to {
		display: block;
		block-size: max-content;
		transform: unset;
	}
}

/** Childnode: Status
=========================================================================== */

:host {
	#status {
		font-weight: var(--text-boldness);

		&::before {
			unset: all;

			color: var(--marker-color);
			font-weight: var(--text-boldness);
			transition: color var(--base-easing) 680ms;
		}

		&:empty[aria-placeholder]::before {
			content: attr(aria-placeholder);
		}
		&:not(:empty)[aria-label]::before {
			content: attr(aria-label) ' ';
		}
	}
}

:host(:state(--expanded)) #status:not(:empty)[aria-label]::before {
	color: var(--clr-gray-400);
}

/**
 * Element: Option (placed into a slot)
 *
 * Option of the value available for user selection.
 * It is an element nested in Listbox and whose role is option.
 * The option element can contain text or an image,
 * or a DOM subtree specified by other UI components.
 *	
 * [ProtoSite](http://protosite.rocks/components/select.html)
=========================================================================== */

[role='option'] {
	::slotted(&) {
		--bkgd-color: transparent;
		--icon-code: '';
		--text-interligne: 2.5em;
		--space-start: var(--option-start-space);
		--space-end: var(--option-end-space);
	}

	::slotted(&:hover) {
		--bkgd-color: var(--option-bg-color);
	}
}

[role='option'] {
	::slotted(&[aria-selected='true']),
	::slotted(&[aria-current='true']) {
		@extend %icon-settings;
	}

	::slotted(&[aria-current='true']) {
		--space-end: calc(var(--option-end-space) - var(--space-xs));
		--space-start: calc(var(--option-start-space) + var(--space-xs));
		--text-boldness: var(--font-medium);
	}

	&[aria-selected='true'] {
		--space-end: calc(var(--option-end-space) - var(--space-xxs));
		--space-start: calc(var(--option-start-space) + var(--space-xxs));

		::slotted(&) {
			--icon-code: var(--option-glyph);
			--icon-color: var(--clr-gray-400);
			--icon-size: var(--unit);
			--text-color: var(--clr-gray-500);
		}

		::slotted(&:hover) {
			--bkgd-color: transparent;
		}
	}

	::slotted(&[aria-current='true'][aria-selected='true']) {
		--space-end: calc(var(--option-end-space) - var(--space-xs) - var(--space-xxs));
		--space-start: calc(var(--option-start-space) + var(--space-xxs) + var(--space-xs));
	}
}

[role='option'] {
	::slotted(&) {
		padding-inline-start: var(--space-start);
		padding-inline-end: var(--space-end);

		background-color: var(--bkgd-color);
		cursor: pointer;

		transition-duration: 160ms;
		transition-property: background-color, padding-inline;
		transition-timing-function: var(--base-easing);
	}

	::slotted(&:first-of-type) {
		border-radius: var(--space-sm) var(--space-sm) 0 0;
	}

	::slotted(&:last-of-type) {
		border-radius: 0 0 var(--space-sm) var(--space-sm);
		margin-block-end: unset;
	}

	::slotted(&[aria-selected='true']) {
		@extend %icon;

		display: flex;
		align-items: center;
		flex-flow: row nowrap;
		column-gap: var(--space-sm);
		padding-inline-start: 1.1--option-start-space;
		padding-inline-end: calc(1--option-end-space - 0.1--option-start-space);
		cursor: default;

		&::after {
			all: unset;
		}
		&::before {
			content: var(--icon-code);
		}
	}

	::slotted(&[aria-selected='true'][aria-current='true']) {
		padding-inline-start: 1.6--option-start-space;
		padding-inline-end: calc(1--option-end-space - 0.6--option-start-space);
	}
}

/* Correct border radius of an option into scrolled listbox */

#picker[role='listbox']:state(--scrolled) {
	::slotted([role='option']:first-of-type) {
		border-top-right-radius: 0;
	}
	::slotted([role='option']:first-of-type) {
		border-bottom-right-radius: 0;
	}
}
