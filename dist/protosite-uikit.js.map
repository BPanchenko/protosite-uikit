{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/uikit.js","webpack:///./src/js/custom-elements/avatar.js","webpack:///./src/js/custom-elements/button.js","webpack:///./src/js/custom-elements/field.js","webpack:///./src/js/custom-elements/tabs.js","webpack:///./src/js/custom-elements/thumbnail.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","console","time","timeEnd","CLS","main","link","img","xs","sm","md","lg","xl","AvatarElement","HTMLElement","[object Object]","this","_children","Array","from","children","render","cleanup","src","href","size","shadow","target","dataset","_container","document","createElement","classList","add","appendChild","indexOf","warn","_link","style","backgroundImage","_img","length","forEach","child","removeAttribute","customElements","define","nodeType","ButtonElement","hasAttribute","setAttribute","glyph","createIconNode","text","node","innerText","createTextNode","glyphAtRight","ButtonGroupElement","innerHTML","FIELD_CLS","box","button","buttonIcon","error","field","filled","focused","label","icon","info","invalid","valid","PATTERN_EMAIL","PATTERN_PWD","FieldElement","addEventListener","e","focus","_field","blur","change","input","_button","clickButton","isFilled","remove","type","checked","isValid","pattern","buttonGlyph","preventDefault","disabled","isCheckable","click","val","is","ptr","RegExp","test","_label","renderLabel","_icon","renderIcon","renderField","_iconAtRight","renderButton","buttonType","_error","renderError","_info","renderInfo","getAttribute","options","btn","createTag","inner","elem","placeholder","HTMLOptionElement","createField","createIcon","flag","trim","tagName","cls","TablistElement","activeTab","activeTabpanel","indicator","createIndicator","onSelectTab","setTimeout","activate","selectedTab","querySelector","dispatchEvent","Event","bubbles","querySelectorAll","tab","contains","ariaSelected","id","ariaControls","renderIndicator","width","clientWidth","transform","offsetLeft","TabElement","createLabel","caption","shutter","container","_text"],"mappings":"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","file":"protosite-uikit.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","console.time('t');\r\n\r\nimport './custom-elements/avatar.js';\r\nimport './custom-elements/button.js';\r\nimport './custom-elements/field.js';\r\nimport './custom-elements/tabs.js';\r\nimport './custom-elements/thumbnail.js';\r\n\r\nconsole.timeEnd('t');","'use strict';\r\n\r\n/**\r\n * Component: `c-avatar`\r\n *\r\n * Markup: <c-avatar\r\n *              data-src=\"...\"\r\n *              data-href=\"...\"\r\n *              data-size=\"xsmall|small|medium|large|xlarge\"\r\n *              data-shadow=\"inset|2dp|3dp|4dp|6dp|8dp|16dp|24dp\"\r\n * />\r\n */\r\n\r\n(function() {\r\n\r\n    const CLS = Object.create(null, {\r\n        'main': { value: 'c-avatar' },\r\n\r\n        'link': { value: 'c-avatar__link' },\r\n        'img': { value: 'c-avatar__image' },\r\n        'xs': { value: 'c-avatar--xs' },\r\n        'sm': { value: 'c-avatar--sm' },\r\n        'md': { value: 'c-avatar--md' },\r\n        'lg': { value: 'c-avatar--lg' },\r\n        'xl': { value: 'c-avatar--xl' }\r\n    });\r\n\r\n    class AvatarElement extends HTMLElement {\r\n        connectedCallback() {\r\n            this._children = Array.from(this.children);\r\n            this.render().cleanup();\r\n        }\r\n\r\n        render() {\r\n            let { src, href, size, shadow, target } = this.dataset;\r\n            \r\n            this._container = document.createElement('figure');\r\n            this._container.classList.add(CLS.main);\r\n            this.appendChild(this._container);\r\n            \r\n            if (~['xs','sm','md','lg','xl'].indexOf(size)) {\r\n                this._container.classList.add(CLS[size]);\r\n            } else if (size) {\r\n                console.warn(\"Size can take values 'xs', 'sm', 'md', 'lg' or 'xl'\");\r\n            }\r\n\r\n            if (~['2dp','3dp','4dp','6dp','8dp','16dp','24dp'].indexOf(shadow)) {\r\n                this._container.classList.add(`s-shadow-${shadow}`);\r\n            } else if (shadow && shadow != 'inset') {\r\n                console.warn(\"Shadow can take values '2dp', '3dp', '4dp', '6dp', '8dp', '16dp' or '24dp'\");\r\n            }\r\n            \r\n            if (href) {\r\n                this._link = document.createElement('a');\r\n                this._link.classList.add(CLS.link);\r\n                this._link.href = href;\r\n                this._link.target = target || '_self';\r\n                this._container.appendChild(this._link);\r\n            }\r\n\r\n            if (src) {\r\n                if (shadow == 'inset') {\r\n                    this._container.style.backgroundImage = `url(${src})`;\r\n                } else {\r\n                    this._img = document.createElement('img');\r\n                    this._img.classList.add(CLS.img);\r\n                    this._img.src = src;\r\n                    if (this._link) {\r\n                        this._link.appendChild(this._img);\r\n                    } else {\r\n                        this._container.appendChild(this._img);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._children.length) {\r\n                this._children.forEach(child => this._container.appendChild(child));\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n        cleanup() {\r\n            this.removeAttribute('data-src');\r\n            this.removeAttribute('data-href');\r\n            this.removeAttribute('data-size');\r\n            this.removeAttribute('data-shadow');\r\n            this.removeAttribute('data-target');\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Define the new element\r\n\r\n    if (customElements) customElements.define('c-avatar', AvatarElement);\r\n    if (typeof exports != 'undefined' && !exports.nodeType) exports.AvatarElement = AvatarElement;\r\n}());","'use strict';\r\n\r\n(function() {\r\n\r\n    class ButtonElement extends HTMLElement {\r\n        connectedCallback() {\r\n            this.classList.add('c-button');\r\n            if(!this.hasAttribute('type')) this.setAttribute('type', 'button');\r\n\r\n            if (this.dataset.glyph) {\r\n                this.appendChild(createIconNode(this.dataset.glyph));\r\n                delete this.dataset.glyph;\r\n            }\r\n\r\n            if (this.dataset.text) {\r\n                this.appendChild(createTextNode(this.dataset.text));\r\n                delete this.dataset.text;\r\n            }\r\n\r\n            if (this.dataset.glyphAtRight) {\r\n                this.appendChild(createIconNode(this.dataset.glyphAtRight));\r\n                delete this.dataset.glyphAtRight;\r\n            }\r\n        }\r\n    }\r\n\r\n    class ButtonGroupElement extends HTMLElement {\r\n        connectedCallback() {\r\n            this.classList.add('c-button-group');\r\n        }\r\n    }\r\n\r\n    // Private function's\r\n\r\n    function createIconNode(glyph) {\r\n        let node = document.createElement('span');\r\n        node.classList.add('c-button__icon');\r\n        node.innerHTML = `<span class=\"iconic\" data-glyph=\"${glyph}\"></span>`;\r\n        return node;\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        let node = document.createElement('span');\r\n        node.classList.add('c-button__text');\r\n        node.innerText = text;\r\n        return node;\r\n    }\r\n\r\n    // Define the new element\r\n\r\n    if (customElements) customElements.define('c-button', ButtonElement);\r\n    if (typeof exports != 'undefined' && !exports.nodeType) exports.ButtonElement = ButtonElement;\r\n\r\n    if (customElements) customElements.define('c-button-group', ButtonGroupElement);\r\n    if (typeof exports != 'undefined' && !exports.nodeType) exports.ButtonGroupElement = ButtonGroupElement;\r\n}());","(function() {\r\n\r\n    const FIELD_CLS = Object.create(null, {\r\n        box: { value: 'c-field-box' },\r\n        button: { value: 'c-field-button' },\r\n        buttonIcon: { value: 'iconic' },\r\n        error: { value: 'c-field-error' },\r\n        field: { value: 'c-field' },\r\n        filled: { value: 'is-filled' },\r\n        focused: { value: 'is-focused' },\r\n        label: { value: 'c-field-label' },\r\n        icon: { value: 'c-field-icon' },\r\n        info: { value: 'c-field-info' },\r\n        invalid: { value: 'is-invalid' },\r\n        valid: { value: 'is-valid' }\r\n    });\r\n\r\n    const PATTERN_EMAIL = '^\\\\S+@\\\\S+\\\\.\\\\S+$';\r\n    const PATTERN_PWD = '^\\\\w{6,20}$';\r\n\r\n    /* Class `FieldElement`\r\n     ========================================================================== */\r\n\r\n    class FieldElement extends HTMLElement {\r\n\r\n        connectedCallback() {\r\n            this._children = Array.from(this.children);\r\n            this.classList.add(FIELD_CLS.box);\r\n\r\n            this.render().cleanup();\r\n\r\n            this.addEventListener('click', e => this.focus());\r\n            this._field.addEventListener('blur', e => this.blur());\r\n            this._field.addEventListener('change', e => this.change());\r\n            this._field.addEventListener('focus', e => this.focus());\r\n            this._field.addEventListener('input', e => this.input());\r\n            if(this._button) this._button.addEventListener('click', e => this.clickButton(e));\r\n\r\n            this.blur().change();\r\n        }\r\n\r\n        // Listeners\r\n\r\n        blur() {\r\n            this.isFilled();\r\n            this.classList.remove(FIELD_CLS.focused);\r\n            return this;\r\n        }\r\n        change() {\r\n            this.isFilled();\r\n\r\n            switch (this.type) {\r\n                case 'checkbox':\r\n                case 'radio':\r\n                    // TODO: trigger a change event by checked is false\r\n                    this.setAttribute('aria-checked', this._field.checked);\r\n                    break;\r\n                case 'email':\r\n                    this.isValid(PATTERN_EMAIL);\r\n                    break;\r\n                case 'file':\r\n                    // TODO: save value in fake input\r\n                    break;\r\n                case 'password':\r\n                    this.isValid(PATTERN_PWD);\r\n                    break;\r\n                default:\r\n                    if (this.pattern) this.isValid();\r\n            }\r\n\r\n            return this;\r\n        }\r\n        clickButton(e) {\r\n            switch (this.type) {\r\n                case 'password':\r\n                case 'text':\r\n                    if(this.buttonGlyph === 'eye-closed') {\r\n                        this.buttonGlyph = 'eye-open';\r\n                        this.type = 'text';\r\n                    } else if(this.buttonGlyph === 'eye-open') {\r\n                        this.buttonGlyph = 'eye-closed';\r\n                        this.type = 'password';\r\n                    }\r\n                    break;\r\n                case 'search':\r\n                    if (!this.value) {\r\n                        e.preventDefault();\r\n                        this.classList.add(FIELD_CLS.invalid);\r\n                    } else {\r\n                        this.classList.remove(FIELD_CLS.invalid);\r\n                    }\r\n                    break;\r\n            }\r\n            return this;\r\n        }\r\n        focus() {\r\n            if(this.disabled) return false;\r\n            this.classList.add(FIELD_CLS.focused);\r\n\r\n            this._field.focus();\r\n\r\n            // TODO: fix errors when the type is checkbox or radiobutton\r\n            if(this.isCheckable()) this._field.click();\r\n\r\n            return this;\r\n        }\r\n        input() {\r\n            if(this.pattern && !~['email', 'password'].indexOf(this.type)) this.isValid();\r\n            return this;\r\n        }\r\n\r\n        // States\r\n\r\n        isFilled() {\r\n            let val = this.value;\r\n            let is = !!val && val!=='0' && val!=='null';\r\n            this.classList[ is ? 'add' : 'remove'](FIELD_CLS.filled);\r\n            return is;\r\n        }\r\n\r\n        isValid(pattern = null) {\r\n            let val = this.value;\r\n            let ptr = pattern || this.pattern;\r\n\r\n            // is exists value and pattern\r\n\r\n            if (!val || !ptr) {\r\n                this.classList.remove(FIELD_CLS.invalid, FIELD_CLS.valid);\r\n                return null;\r\n            }\r\n\r\n            // check pattern\r\n\r\n            let reg = new RegExp(ptr);\r\n            let is = reg.test(val);\r\n\r\n            if (is) {\r\n                this.classList.add(FIELD_CLS.valid);\r\n                this.classList.remove(FIELD_CLS.invalid);\r\n            } else {\r\n                this.classList.add(FIELD_CLS.invalid);\r\n                this.classList.remove(FIELD_CLS.valid);\r\n            }\r\n\r\n            return is;\r\n        }\r\n\r\n        // Rendering\r\n\r\n        cleanup() {\r\n            this.removeAttribute('data-button');\r\n            this.removeAttribute('data-button-glyph');\r\n            this.removeAttribute('data-error');\r\n            this.removeAttribute('data-glyph');\r\n            this.removeAttribute('data-glyph-at-right');\r\n            this.removeAttribute('data-label');\r\n            this.removeAttribute('data-info');\r\n            this.removeAttribute('data-info-tooltip');\r\n            this.removeAttribute('data-name');\r\n            this.removeAttribute('data-pattern');\r\n            this.removeAttribute('data-type');\r\n            this.removeAttribute('placeholder');\r\n            return this;\r\n        }\r\n        isCheckable() {\r\n            return ~['radio', 'checkbox'].indexOf(this.type);\r\n        }\r\n        render() {\r\n            if (this.label && !this.isCheckable()) this._label = this.renderLabel(this.label);\r\n            if (this.glyph) this._icon = this.renderIcon(this.glyph);\r\n\r\n            this._field = this.renderField();\r\n\r\n            if (this.label && this.isCheckable()) this._label = this.renderLabel(this.label);\r\n            if (this.glyphAtRight) this._iconAtRight = this.renderIcon(this.glyphAtRight);\r\n            if (this.button) this._button = this.renderButton({ text: this.button, type: this.buttonType });\r\n            if (this.buttonGlyph) this._button = this.renderButton({ glyph: this.buttonGlyph, type: this.buttonType });\r\n            if (this.error) this._error = this.renderError(this.error);\r\n            if (this.info) this._info = this.renderInfo(this.info);\r\n\r\n            this.disabled = this.getAttribute('aria-disabled') === 'true';\r\n            return this;\r\n        }\r\n\r\n        renderButton(options) {\r\n            let { glyph, text, type = 'button' } = options;\r\n            let btn = createTag('button', FIELD_CLS.button);\r\n            let inner = createTag('span', glyph ? FIELD_CLS.buttonIcon : '');\r\n            btn.type = type;\r\n            if (glyph) inner.dataset.glyph = glyph;\r\n            if (text) inner.innerText = text;\r\n            btn.appendChild(inner);\r\n            this.appendChild(btn);\r\n            return btn;\r\n        }\r\n\r\n        renderError(text) {\r\n            let elem = createTag('span', FIELD_CLS.error, text);\r\n            this.appendChild(elem);\r\n            return elem;\r\n        }\r\n\r\n        renderField() {\r\n            let elem = createField({\r\n                children: this._children,\r\n                name: this.name,\r\n                pattern: this.pattern,\r\n                placeholder: this.placeholder,\r\n                type: this.type\r\n            });\r\n            this.appendChild(elem);\r\n            return elem;\r\n        }\r\n\r\n        renderIcon(glyph) {\r\n            let elem = createIcon(glyph);\r\n            this.appendChild(elem);\r\n            return elem;\r\n        }\r\n\r\n        renderInfo(text) {\r\n            let elem = createTag('span', FIELD_CLS.info, text);\r\n            this.appendChild(elem);\r\n            return elem;\r\n        }\r\n\r\n        renderLabel(text) {\r\n            let elem = createTag('span', FIELD_CLS.label, text);\r\n            this.appendChild(elem);\r\n            return elem;\r\n        }\r\n\r\n        // Attributes\r\n\r\n        get disabled() {\r\n            return this._field.hasAttribute('disabled');\r\n        }\r\n        set disabled(flag) {\r\n            if(flag !== false) {\r\n                this.setAttribute('aria-disabled', true);\r\n                this._field.setAttribute('disabled', 'disabled');\r\n            } else {\r\n                this.setAttribute('aria-disabled', false);\r\n                this._field.removeAttribute('disabled');\r\n            }\r\n        }\r\n\r\n        get button() {\r\n            return this.dataset.button || this.getAttribute('button');\r\n        }\r\n        get buttonGlyph() {\r\n            let glyph = this.dataset.buttonGlyph || this.getAttribute('button-glyph');\r\n            if (!glyph && this._button) glyph = this._button.children[0].dataset.glyph;\r\n            return glyph;\r\n        }\r\n        set buttonGlyph(val) {\r\n            if (this._button) this._button.children[0].dataset.glyph = val;\r\n            else this.dataset.buttonGlyph = val;\r\n        }\r\n        get buttonType() {\r\n            return this.dataset.buttonType || this.getAttribute('button-type');\r\n        }\r\n\r\n        get error() {\r\n            return this.dataset.error;\r\n        }\r\n\r\n        get glyph() {\r\n            return this.dataset.glyph || this.getAttribute('glyph');\r\n        }\r\n        set glyph(val) {\r\n            this.dataset.glyph = val;\r\n            this.renderIcon(val);\r\n        }\r\n\r\n        get glyphAtRight() {\r\n            return this.dataset.glyphAtRight || this.getAttribute('glyph-at-right');\r\n        }\r\n\r\n        get label() {\r\n            return this.dataset.label || this.getAttribute('label');\r\n        }\r\n        set label(val) {\r\n            this.dataset.glyph = val;\r\n            this.renderLabel(val);\r\n        }\r\n\r\n        get info() {\r\n            return this.dataset.info || this.getAttribute('info');\r\n        }\r\n        get name() {\r\n            return this.dataset.name || this.getAttribute('name');\r\n        }\r\n        get pattern() {\r\n            return this.dataset.pattern || this.getAttribute('pattern');\r\n        }\r\n        get placeholder() {\r\n            return this.dataset.placeholder || this.getAttribute('placeholder');\r\n        }\r\n        get type() {\r\n            let type = this.dataset.type || this.getAttribute('type');\r\n            if (!type && this._field) type = this._field.getAttribute('type');\r\n            return type || 'text';\r\n        }\r\n        set type(val) {\r\n            // TODO: reRender this._field\r\n            if (this._field) this._field.setAttribute('type', val);\r\n            else this.dataset.type = val;\r\n        }\r\n        get value() {\r\n            let val = this._field.value.trim();\r\n            return val;\r\n        }\r\n    }\r\n\r\n    // Private function's\r\n\r\n    function createField(options = {}) {\r\n        let { children, name, pattern, placeholder, type = 'text' } = options;\r\n        let node;\r\n        switch (type) {\r\n            case 'select':\r\n                node = document.createElement('select');\r\n                if (children.length) {\r\n                    Array.from(children).forEach(child => {\r\n                        if (child instanceof HTMLOptionElement) node.appendChild(child);\r\n                    });\r\n                }\r\n                break;\r\n            case 'textarea':\r\n                node = document.createElement('textarea');\r\n                break;\r\n            default:\r\n                node = document.createElement('input');\r\n                node.setAttribute('role', type === 'text' ? 'textbox' : type);\r\n                node.setAttribute('type', type);\r\n        }\r\n        node.classList.add('c-field');\r\n        name && node.setAttribute('name', name);\r\n        pattern && node.setAttribute('name', pattern);\r\n        placeholder && node.setAttribute('placeholder', placeholder);\r\n        return node;\r\n    }\r\n\r\n    function createIcon(glyph) {\r\n        let node = document.createElement('span');\r\n        node.classList.add(FIELD_CLS.icon);\r\n        node.innerHTML = `<span class=\"iconic\" data-glyph=\"${glyph}\"></span>`;\r\n        return node;\r\n    }\r\n\r\n    function createTag(tagName, cls, text) {\r\n        let node = document.createElement(tagName);\r\n        node.classList.add(cls);\r\n        if (text) node.innerText = text;\r\n        return node;\r\n    }\r\n\r\n    // Define the new element's\r\n\r\n    if (customElements) {\r\n        customElements.define('c-field', FieldElement);\r\n    }\r\n\r\n    if (typeof exports != 'undefined' && !exports.nodeType) {\r\n        exports.FieldElement = FieldElement;\r\n    }\r\n}());","(function() {\r\n\r\n    /* Class `TabsContainerElement`\r\n     ========================================================================== */\r\n\r\n    class TablistElement extends HTMLElement {\r\n\r\n        get activeTab() {\r\n            return this.dataset.activeTab;\r\n        }\r\n\r\n        get activeTabpanel() {\r\n            return this.dataset.activeTabpanel;\r\n        }\r\n\r\n        connectedCallback() {\r\n            this.classList.add('c-tabs-container');\r\n            this.setAttribute('role', 'tablist');\r\n\r\n            if (!this.indicator) {\r\n                this.indicator = createIndicator();\r\n                this.appendChild(this.indicator);\r\n            }\r\n\r\n            this.addEventListener('click', this.onSelectTab, false);\r\n            setTimeout(this.activate.bind(this), 0);\r\n        }\r\n\r\n        activate() {\r\n            let selectedTab = this.querySelector('.c-tab[aria-selected=true]');\r\n            if(!selectedTab) selectedTab = this.children[0];\r\n            selectedTab.dispatchEvent(new Event(\"click\", { bubbles: true }));\r\n        }\r\n\r\n        onSelectTab(e) {\r\n            let selectedTab;\r\n\r\n            // unselect don't current tabs\r\n            this.querySelectorAll('.c-tab').forEach(tab => {\r\n                if(tab.contains(e.target)) selectedTab = tab;\r\n                else tab.ariaSelected = false;\r\n            });\r\n\r\n            // dispatch a change event with the data of the selected tab\r\n            if(selectedTab) {\r\n                this.dataset.activeTab = selectedTab.id;\r\n                this.dataset.activeTabpanel = selectedTab.ariaControls;\r\n                this.dispatchEvent(new Event(\"change\", { bubbles: true }));\r\n            }\r\n\r\n            this.renderIndicator();\r\n\r\n            return;\r\n        }\r\n\r\n        renderIndicator() {\r\n            let selectedTab = this.querySelector('.c-tab[aria-selected=true]');\r\n\r\n            this.indicator.setAttribute('aria-hidden', !selectedTab);\r\n            if(selectedTab) {\r\n                this.indicator.style.width = selectedTab.clientWidth + 'px';\r\n                this.indicator.style.transform = `translateX(${selectedTab.offsetLeft}px)`;\r\n            }\r\n        }\r\n    }\r\n\r\n    /* Class `TabElement`\r\n     ========================================================================== */\r\n\r\n    class TabElement extends HTMLElement {\r\n\r\n        get ariaControls() {\r\n            return this.getAttribute('aria-controls') || '';\r\n        }\r\n\r\n        set ariaSelected(flag) {\r\n            this.setAttribute('aria-selected', !!flag && flag != 'false');\r\n        }\r\n\r\n        connectedCallback() {\r\n            this.classList.add('c-tab');\r\n            this.setAttribute('role', 'tab');\r\n\r\n            if (this.dataset.glyph) {\r\n                this.appendChild(createIcon(this.dataset.glyph));\r\n                delete this.dataset.glyph;\r\n            }\r\n\r\n            if (this.dataset.text) {\r\n                this.appendChild(createLabel(this.dataset.text));\r\n                delete this.dataset.text;\r\n            }\r\n\r\n            this.addEventListener('click', this.onSelectTab);\r\n        }\r\n\r\n        onSelectTab(e) {\r\n            e.preventDefault();\r\n            this.setAttribute('aria-selected', true);\r\n            return;\r\n        }\r\n    }\r\n\r\n    // Private function's\r\n\r\n    function createIcon(glyph) {\r\n        let node = document.createElement('span');\r\n        node.classList.add('c-tab__icon');\r\n        node.innerHTML = `<span class=\"iconic\" data-glyph=\"${glyph}\"></span>`;\r\n        return node;\r\n    }\r\n\r\n    function createLabel(text) {\r\n        let node = document.createElement('span');\r\n        node.classList.add('c-tab__label');\r\n        node.innerText = text;\r\n        return node;\r\n    }\r\n\r\n\r\n    function createIndicator() {\r\n        let node = document.createElement('span');\r\n        node.classList.add('c-tab-indicator');\r\n        return node;\r\n    }\r\n\r\n    // Define the new element's\r\n\r\n    if (customElements) {\r\n        customElements.define('c-tablist', TablistElement);\r\n        customElements.define('c-tab', TabElement);\r\n    }\r\n\r\n    if (typeof exports != 'undefined' && !exports.nodeType) {\r\n        exports.TablistElement = TablistElement;\r\n        exports.TabElement = TabElement;\r\n    }\r\n}());","'use strict';\r\n\r\n/**\r\n * Component: `c-thumbnail`\r\n *\r\n * Markup: <c-thumbnail\r\n *              data-src=\"...\"\r\n *              data-href=\"...\"\r\n *              data-size=\"xsmall|small|medium|large|xlarge\"\r\n *              data-shadow=\"inset|2dp|3dp|4dp|6dp|8dp|16dp|24dp\"\r\n * />\r\n */\r\n\r\n(function() {\r\n\r\n    const CLS = Object.create(null, {\r\n        'main': { value: 'c-thumbnail' },\r\n\r\n        'caption': { value: 'c-thumbnail__caption' },\r\n        'link': { value: 'c-thumbnail__link' },\r\n        'img': { value: 'c-thumbnail__image' },\r\n        'shutter': { value: 'c-thumbnail__shutter' },\r\n        'xs': { value: 'c-thumbnail--xs' },\r\n        'sm': { value: 'c-thumbnail--sm' },\r\n        'md': { value: 'c-thumbnail--md' },\r\n        'lg': { value: 'c-thumbnail--lg' },\r\n        'xl': { value: 'c-thumbnail--xl' }\r\n    });\r\n\r\n    class AvatarElement extends HTMLElement {\r\n        connectedCallback() {\r\n            this.render().cleanup();\r\n        }\r\n\r\n        render() {\r\n            let { src, href, size, target } = this.dataset;\r\n            let text = this.innerText;\r\n            this.innerHTML = '';\r\n\r\n            this.classList.add(CLS.main);\r\n            \r\n            if (~['xs','sm','md','lg','xl'].indexOf(size)) {\r\n                this.classList.add(CLS[size]);\r\n            } else if (size) {\r\n                console.warn(\"Size can take values 'xs', 'sm', 'md', 'lg' or 'xl'\");\r\n            }\r\n\r\n            let container = this;\r\n            \r\n            if (href) {\r\n                this._link = document.createElement('a');\r\n                this._link.classList.add(CLS.link);\r\n                this._link.href = href;\r\n                this._link.target = target || '_self';\r\n                container.appendChild(this._link);\r\n                container = this._link;\r\n            }\r\n\r\n            if (src) {\r\n                this._img = document.createElement('img');\r\n                this._img.classList.add(CLS.img);\r\n                this._img.src = src;\r\n                container.appendChild(this._img);\r\n            }\r\n\r\n            if (text) {\r\n                if (href) {\r\n                    this._text = document.createElement('span');\r\n                    this._text.classList.add(CLS.shutter);\r\n                } else {\r\n                    this._text = document.createElement('figcaption');\r\n                    this._text.classList.add(CLS.caption);\r\n\r\n                }\r\n                this._text.innerText = text;\r\n                container.appendChild(this._text);\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n        cleanup() {\r\n            this.removeAttribute('data-src');\r\n            this.removeAttribute('data-href');\r\n            this.removeAttribute('data-size');\r\n            this.removeAttribute('data-shadow');\r\n            this.removeAttribute('data-target');\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Define the new element\r\n\r\n    if (customElements) customElements.define('c-thumbnail', AvatarElement);\r\n    if (typeof exports != 'undefined' && !exports.nodeType) exports.AvatarElement = AvatarElement;\r\n}());"],"sourceRoot":""}