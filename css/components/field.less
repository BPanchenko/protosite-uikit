@import "../settings/variables";

/**
 * Component:		`c-field`
 *
 * Elements:		`c-field-button`
 *                  `c-field-error`
 *                  `c-field-icon`
 *					`c-field-input`
 *                  `c-field-label`
 *                  `c-field-value`
 *
 * States:			`is-filled`
 *					`is-focused`
 *					`is-invalid`
 *					`is-valid`
 *
 ========================================================================== */

// Variables
// ========================================================================

@c-field-width: @unit * 30;
@c-field-height: 6rem;
@c-field-padding-top: @unit;
@c-field-padding-bottom: @unit;

@c-field-button-width: @c-field-input-height;
@c-field-button-height: @c-field-input-height;

@c-field-error-font-size: 1.1rem;
@c-field-error-font-weight: 700;
@c-field-error-line-height: 1;
@c-field-error-color: @clr-red-400;


@c-field-label-top: @c-field-padding-top + .3rem;
@c-field-label-left: 0;
@c-field-label-font-size: @body-font-size;
@c-field-label-color: @clr-grey-600;

@c-field-focused-label-top: 0;
@c-field-focused-label-left: 0;
@c-field-focused-label-font-size: 1.1rem;
@c-field-focused-label-color: @body-color;

@c-field-label-left-after-icon: @c-field-icon-width;


@c-field-icon-width: @c-field-input-height;
@c-field-icon-height: @c-field-input-height;
@c-field-icon-text-shadow: @c-button-text-shadow;


@c-field-input-height: @unit * 1.5;
@c-field-input-border-bottom: 1px solid @body-color;
@c-field-input-invalid-border-bottom: 1px solid @clr-red-400;


/* Parent element: `c-field` (if you want to use the input tag)
 ========================================================================== */

.c-field {
	display: inline-block;
	position: relative;
	box-sizing: border-box;
	cursor: pointer;

	width: @c-field-width;
	height: @c-field-height;
	padding-top: @c-field-padding-top;
	padding-bottom: @c-field-padding-bottom;

	&::before {
		content: ' ';
		display: block;
		width: inherit;
		border-bottom: @c-field-input-border-bottom;
		transform: translate(0, @c-field-input-height);
		transition: border-bottom 160ms @easing;
	}
	
	// Invalid state
	&.is-invalid::before {
		border-bottom: @c-field-input-invalid-border-bottom;
	}
}


/* Element: `c-field-input`
 ========================================================================== */

.c-field-input {
	-webkit-appearance: none;

	display: inline-block;
	background-color: transparent;
	width: inherit;
	height: @c-field-input-height;
	box-sizing: border-box;

	border: none;
	outline: none;

	&[type=file] {
		opacity: 0;
		cursor: pointer;
		position: relative;
		z-index: -1;
	}
}


/* Element: `c-field-label`
 ========================================================================== */

.c-field-label {
	position: absolute;
	top: @c-field-label-top;
	left: @c-field-label-left;
	font-size: @c-field-label-font-size;
	color: @c-field-label-color;
	cursor: pointer;

	transition: left 160ms @easing, font-size 160ms @easing, color 160ms @easing, top 160ms @easing;
}

// Modifiers: `is-focused` and `is-filled`
.c-field.is-filled .c-field-label,
.c-field.is-focused .c-field-label {
	top: @c-field-focused-label-top;
	left: @c-field-focused-label-left;
	font-size: @c-field-focused-label-font-size;
	cursor: text;
}

.c-field.is-focused .c-field-label {
	color: @c-field-focused-label-color;
}


/* Element: `c-field-value` (the field used for file selection)
 ========================================================================== */

.c-field-value {
	position: absolute;
	top: @c-field-padding-top;
	left: 0;
}


/* Elements: `c-field-icon` and `c-field-value`
 * (`c-field-value` is used for the field file selection)
 ========================================================================== */

.c-field-icon,
.c-field-value {
	position: absolute;
	top: @c-field-padding-top;

	display: inline-block;
	height: @c-field-icon-height;
	line-height: @c-field-icon-height + .3rem;
}

.c-field-icon {
	width: @c-field-icon-width;
	text-align: center;
	text-shadow: @c-field-icon-text-shadow;
}

.c-field-icon + .c-field-label {
	left: @c-field-label-left-after-icon;
}

.c-field-icon + .c-field-input,
.c-field-icon + .c-field-input + .c-field-value,
.c-field-icon + .c-field-label + .c-field-input,
.c-field-icon + .c-field-label + .c-field-input + .c-field-value {
	padding-left: @c-field-label-left-after-icon;
}

.is-invalid .c-field-icon {
	color: @c-field-error-color;
}


/* Element: `c-field-button`
 ========================================================================== */

/*button*/.c-field-button {
	position: absolute;
	top: @c-field-padding-top;
	right: 0;

	// default component style
	.c-button;

	// reset component style
	background: transparent;
	border: none;
	box-shadow: none;
  	padding: 0;
	min-height: auto;

	width: @c-field-button-width;
	height: @c-field-button-height;

}


/* Element: `c-field-error`
 ========================================================================== */

.c-field-error {
	font-size: @c-field-error-font-size;
	font-weight: @c-field-error-font-weight;
	line-height: @c-field-error-line-height;
	color: @c-field-error-color;
	opacity: 0;

	transition: opacity 160ms @easing;
}

// Invalid state
.c-field.is-invalid .c-field-error {
	opacity: 1;
}